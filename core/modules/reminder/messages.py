from telegram import InlineKeyboardButton, InlineKeyboardMarkup

from core.modules.base import BaseModule
from core.settings.commands import CommandNames


# * TEXT ___________________________________________________________________
choose_reminder_time_button = "‚è∞ –í—ã–±—Ä–∞—Ç—å –≤—Ä–µ–º—è"
ask_reminder_time = "‚è∞ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß:–ú–ú (–Ω–∞–ø—Ä–∏–º–µ—Ä, 14:30)"
wrong_format_time = "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ß–ß:–ú–ú (–Ω–∞–ø—Ä–∏–º–µ—Ä, 09:30)"
time_is_not_chosen = (
    "‚ùå –í—ã–±–µ—Ä–∏ –≤—Ä–µ–º—è –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ –ø–µ—Ä–µ–¥ —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è"
)


group_is_empty = f"‚ùå –ò–∑–≤–∏–Ω–∏, —Å–µ–≥–æ–¥–Ω—è –±–µ–∑ —Ä–∞—Å—Å—ã–ª–∫–∏(\n–ì—Ä—É–ø–ø–∞ –ø—É—Å—Ç–∞. –í—ã–±–µ—Ä–∏ –≥—Ä—É–ø–ø—É —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /{CommandNames.SET_GROUP}"
group_is_not_chosen = (
    "‚ùå –í—ã–±–µ—Ä–∏ –≥—Ä—É–ø–ø—É –ø–µ—Ä–µ–¥ —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è"
)

reminder_help_text = "<b>–ù–∞ —Å–µ–≥–æ–¥–Ω—è</b> - —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å —Ä–∞—Å—Å—ã–ª–∫–∏\n<b>–ù–∞ –∑–∞–≤—Ç—Ä–∞</b> - —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å —Ä–∞—Å—Å—ã–ª–∫–∏\n<b>–í—ã–±—Ä–∞—Ç—å –≤—Ä–µ–º—è</b> - –∑–∞–¥–∞—Ç—å –≤—Ä–µ–º—è –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏"



# * TEMPLATES ___________________________________________________________________
def success_selected_time_template(time):
    return f"‚úÖ –í—Ä–µ–º—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ {time}"

def user_scheduled_reminder_template(time=None):
    if not time:
        return f"–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /{CommandNames.SET_REMINDER}"

    return f"üóì –†–∞—Å—Å—ã–ª–∫–∞ –≤ {time}\n\n{reminder_help_text}"


def reminder_say_hello(day_id: int):
    templates = {
        0: "–ü—Ä–∏–≤–µ—Ç, –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫! üåû –ù–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—É—é —É—á–µ–±–Ω—É—é –Ω–µ–¥–µ–ª—é! –£–¥–∞—á–∏ –≤ –∑–∞–Ω—è—Ç–∏—è—Ö! üìö",
        1: "–í—Ç–æ—Ä–Ω–∏–∫ - –æ—Ç–ª–∏—á–Ω—ã–π –¥–µ–Ω—å –¥–ª—è —É—á–µ–±—ã! üìñ –ù–µ –∑–∞–±—ã–≤–∞–π—Ç–µ –ø—Ä–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã",
        2: "–°—Ä–µ–¥–∞ - –º–∞–ª–µ–Ω—å–∫–∞—è –ø—è—Ç–Ω–∏—Ü–∞! üéâ –£—á–µ–±–Ω–∞—è –Ω–µ–¥–µ–ª—è –≤ —Ä–∞–∑–≥–∞—Ä–µ –¥–ª—è –≥—Ä—É–ø–ø—ã",
        3: "–ß–µ—Ç–≤–µ—Ä–≥ - –≤—Ä–µ–º—è –ø–æ–¥–≤–µ—Å—Ç–∏ –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–µ –∏—Ç–æ–≥–∏!",
        4: "–ü—è—Ç–Ω–∏—Ü–∞! üéä –°–∫–æ—Ä–æ –≤—ã—Ö–æ–¥–Ω—ã–µ! –ó–∞–≤–µ—Ä—à–∞–π—Ç–µ —É—á–µ–±–Ω—ã–µ –¥–µ–ª–∞",
        5: "–°—É–±–±–æ—Ç–∞ - –¥–µ–Ω—å –¥–ª—è –æ—Ç–¥—ã—Ö–∞ –∏ —Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏—è!",
        6: "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ - –≥–æ—Ç–æ–≤–∏–º—Å—è –∫ –Ω–æ–≤–æ–π –Ω–µ–¥–µ–ª–µ!"
    }
    
    return templates[day_id]



# * KEYBOARDS
def reminder_keyboard_default(settings: dict):
    return InlineKeyboardMarkup([
            [
                InlineKeyboardButton(
                    text=f"–ù–∞ —Å–µ–≥–æ–¥–Ω—è {'‚úÖ' if settings.get('reminder_today', True) else '‚ùå'}",
                    callback_data=f"settings#bool${not settings.get('reminder_today', True)}$reminder_today"
                ),
                InlineKeyboardButton(
                    text=f"–ù–∞ –∑–∞–≤—Ç—Ä–∞ {'‚úÖ' if not settings.get('reminder_today', True) else '‚ùå'}",
                    callback_data=f"settings#bool${not settings.get('reminder_today', True)}$reminder_today"
                ), 
            ],
            [
                BaseModule.delegate_button_template(
                    choose_reminder_time_button,
                    f"{CommandNames.SET_REMINDER}"
                )
            ],
            [
                BaseModule.menu_button, BaseModule.delegate_button_template(
                    "–ù–∞—Å—Ç—Ä–æ–π–∫–∏",
                    f"{CommandNames.SETTINGS}"
                )
            ]
            ])